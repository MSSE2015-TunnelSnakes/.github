# generic .net build/test which is run within a SonarCloud Scan wrapper
# when this is used, no seperate Build/Test would be needed unless other outputs are needed

#! NOTE: SonarCloud does not currently support preview versions of .Net
#!       https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/

name: .Net Build/Test with SonarCloud Scan

# set your branches and rules here
on:
  push:
    # branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
  
# fill out the environment variables for your project then customize  
env:
  DOTNET_VERSION: '6.0.x'
  IS_DOTNET_VERSION_PREVIEW: true
  TEST_PROJECT: LT.ProjectName.Tests
  SONAR_PROJECT: Life-Time-Inc_LT.ProjectName

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    steps:
      - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: ${{ env.IS_DOTNET_VERSION_PREVIEW }}
          source-url: ${{ secrets.NEXUS_NUGET_SOURCE }}
          owner: ${{ secrets.NEXUS_AUTH_USER }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NEXUS_AUTH_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: SonarScanner Begin
        if: ${{ !env.IS_DOTNET_VERSION_PREVIEW }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner begin /k:${{ env.SONAR_PROJECT }} /o:"life-time-inc" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/TestResults.trx" /d:sonar.cs.opencover.reportsPaths="**/*.opencover.xml"
                
      - name: Build
        run: dotnet build
      
      - name: Test
        run: dotnet test ${{ env.TEST_PROJECT }} -c Release --logger:'trx;LogFileName=TestResults.trx' --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        
      - name: SonarScanner End
        if: ${{ !env.IS_DOTNET_VERSION_PREVIEW }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
      - name: SonarScan Run Check
        if: ${{ env.IS_DOTNET_VERSION_PREVIEW }}
        run: echo "SonarCloud Scan not run, previews not supported"
      